<Page x:Class="PL.EngineerPages.EngineerPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:controls="clr-namespace:PL.CustomControls"
      xmlns:local="clr-namespace:PL.EngineerPages"
      mc:Ignorable="d"       
      d:DesignHeight="600" d:DesignWidth="1050"
      Title="EngineerPage"
      DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}">

    <Page.Resources>
        <ResourceDictionary Source="/Themes/Dark.xaml"/>
    </Page.Resources>
    
    <Grid Background="Transparent">
        <Grid.Resources>
            <ControlTemplate x:Key="TextBoxControlTemplate" TargetType="{x:Type TextBox}">

                <Border VerticalAlignment="Center" Name="border" Background="{DynamicResource TextBoxColor1}" MinHeight="35" MaxHeight="40" CornerRadius="4" BorderThickness="1" BorderBrush="Black">

                    <TextBox 
                        Name="myTextBox" 
                        IsEnabled="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        Background="Transparent"     
                        BorderThickness="0"
                        FontSize="17"  
                        MaxLength="{TemplateBinding MaxLength}"
                        Height="{TemplateBinding Height}"
                        MinWidth="70"
                        VerticalAlignment="Center"                                             
                        HorizontalAlignment="Center"    
                        HorizontalContentAlignment="Center" 
                        FontFamily="Global Sans Serif"
                        Text ="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                        
                    </TextBox>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBoxBorderColorOnFocus1}"/>
                        <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True" SourceName="myTextBox">
                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBoxBorderColorOnFocus1}"/>
                        <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsFocused" Value="False" SourceName="myTextBox"/>
                            <Condition Property="Text" Value="{x:Null}" SourceName="myTextBox"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Text" TargetName="myTextBox" Value="Name"/>
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Grid.Resources>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.3*"/>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="0.3*"/>
        </Grid.ColumnDefinitions>
        <Border Grid.RowSpan="3" Grid.Column="1" Background="{DynamicResource Backround4}" CornerRadius="15" BorderBrush="Black">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.8*"/>
                    <RowDefinition Height="0.8*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="1.3*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.6*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.6*"/>
                </Grid.ColumnDefinitions>
                
                <!--Profile picture-->
                <Image Grid.Column="1" Grid.ColumnSpan="2" Grid.RowSpan="2" Margin="10" Source="/Graphics/Icons/user1.png"/>
                <!--Name-->
                <StackPanel VerticalAlignment="Center" Margin="15,0" Grid.Column="1" Grid.Row="2">
                    <Label VerticalContentAlignment="Bottom" Content="Name:"/>
                    <TextBox 
                        Template="{StaticResource TextBoxControlTemplate}"
                        Text="{Binding Engineer.Name, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}">
                    </TextBox>
                </StackPanel>
                <!--Id-->
                <StackPanel VerticalAlignment="Center" Margin="15,0" Grid.Column="2" Grid.Row="2">
                    <Label VerticalContentAlignment="Bottom" Content="Id:"/>
                    <TextBox                         
                        Template="{StaticResource TextBoxControlTemplate}"
                        IsEnabled="{Binding Engineer.Id, Mode=OneWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, Converter={StaticResource convertEngIdToIsEnabled}}" 
                        MaxLength="9"
                        Text="{Binding Engineer.Id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" PreviewTextInput="EnteredKey_IdFieldChanged" >
                    </TextBox>
                </StackPanel>
                <!--Email-->
                <StackPanel VerticalAlignment="Center" Margin="15,0" Grid.Column="1" Grid.Row="3">
                    <Label VerticalContentAlignment="Bottom" Content="Email:"/>
                    <TextBox 
                        Template="{StaticResource TextBoxControlTemplate}"
                        Text="{Binding Engineer.Email, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}">
                    </TextBox>
                </StackPanel>
                <!--phone number-->
                <StackPanel VerticalAlignment="Center" Margin="15,0" Grid.Column="2" Grid.Row="3">
                    <Label VerticalContentAlignment="Bottom" Content="Phone number:"/>
                    <TextBox 
                        Template="{StaticResource TextBoxControlTemplate}"
                        Text="TO DO">
                    </TextBox>
                </StackPanel>
                <!--Cost-->
                <StackPanel VerticalAlignment="Center" Margin="15,0" Grid.Column="1" Grid.Row="4">
                    <Label VerticalContentAlignment="Bottom" Content="Cost Per Hour:"/>
                    <TextBox 
                        Template="{DynamicResource TextBoxControlTemplate}"
                        Text="{Binding Engineer.Cost, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=true, ValidatesOnExceptions=true}">
                    </TextBox>
                </StackPanel>
                <!--Level-->
                <StackPanel VerticalAlignment="Center" Margin="15,0" Grid.Column="2" Grid.Row="4">
                    <Label VerticalContentAlignment="Bottom" Content="Level:"/>
                    <ComboBox 
                        Margin="0,0,0,0"
                        Background="{DynamicResource TextBoxColor1}"
                        Foreground="Black"
                        VerticalAlignment="Center"
                        Style="{StaticResource DefaultComboBoxStyle}"
                        SelectedValue="{Binding Engineer.Level, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                        ItemsSource="{Binding Source={StaticResource EngineerExperienceEnumCollection}}" >
                    </ComboBox>
                </StackPanel>
                <!--Task-->
                <StackPanel VerticalAlignment="Center" Margin="15,0" Grid.Column="1" Grid.Row="5">
                    <Label VerticalContentAlignment="Bottom" Content="Assign Task:"/>
                    <CheckBox Name="AssignTaskCheckBox" Grid.Row="6" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,0,0" 
                         IsChecked="{Binding Engineer.Task, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, Converter={StaticResource ConvertNullTaskInEngineerToBool}}"/>
                    <TextBox 
                            Name="textBox"
                            Template="{DynamicResource TextBoxControlTemplate}"                            
                            Text="{Binding Engineer.Task.Alias, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                            IsEnabled="{Binding ElementName=AssignTaskCheckBox, Path=IsChecked}">
                    </TextBox>
                    <ComboBox 
                            Name="tasksComboBox"
                            Margin="0,0,0,0"
                            Background="{DynamicResource TextBoxColor1}" 
                            Foreground="Black"
                            VerticalAlignment="Center"
                            SelectedValue="{Binding Engineer.Task, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                            ItemsSource="{Binding AvailableTasks}">
                        <ComboBox.Style >
                            <Style TargetType="ComboBox" BasedOn="{StaticResource DefaultComboBoxStyle}">
                                <Style.Triggers>
                                    <MultiDataTrigger >
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsEnabled, ElementName=textBox}" Value="True"/>
                                            <!--<Condition Binding="{Binding IsFocused, ElementName=textBox}" Value="True"/>-->
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding IsEnabled, ElementName=textBox}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                </StackPanel>
                <!--Back button-->
                <controls:IconButton 
                    Grid.Row="0" Background="White" 
                    Height="30"
                    Width="30"
                    IconHeight="70"
                    Style="{DynamicResource IconButton1}"  
                    Content="Back" Click="GoBack_BtnClick" 
                    Icon="/Graphics/Icons/backArrow1.png"/>
                <!--Button for adding\updating-->
                <Button 
                    Style="{DynamicResource ButtonStyle1}"
                    DataContext="{Binding Engineer}"
                    Content="{Binding Id, Mode = OneTime, Converter={StaticResource converIdToContent}}" 
                    Background="#FF414243" Foreground="White" FontSize="14" VerticalContentAlignment="Center"
                    Grid.Column="3" Grid.Row="0" Padding="8" Width="75" Height="40"  Click="AddOrUpdateEngineer_btnClick"/>
                <!--Button for reseting changes-->
                <Button 
                    Style="{DynamicResource ButtonStyle1}"
                    Content="Reset Changes" Background="#FF414243" Foreground="White" FontSize="12"
                    VerticalContentAlignment="Center" Width="80" Height="50" HorizontalContentAlignment="Center" Grid.Column="1" Grid.Row="7"
                    Click="ResetChanges_btnClick"/>
            </Grid>
        </Border>
            
    </Grid>
</Page>
