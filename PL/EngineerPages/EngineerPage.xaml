<Page x:Class="PL.EngineerPages.EngineerPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:controls="clr-namespace:PL.CustomControls"
      xmlns:local="clr-namespace:PL.EngineerPages"
      mc:Ignorable="d"       
      d:DesignHeight="600" d:DesignWidth="1050"
      Title="EngineerPage"
      DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}">

    <Page.Resources>
        <ResourceDictionary Source="/Themes/Dark.xaml"/>
        
    </Page.Resources>
    
    <Grid Background="Transparent">
        <Grid.Resources>
        </Grid.Resources>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.3*"/>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="0.3*"/>
        </Grid.ColumnDefinitions>
        <Border Grid.RowSpan="3" Grid.Column="1" Background="{DynamicResource Backround4}" CornerRadius="15" BorderBrush="Black">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="0.8*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="1.3*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.6*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.6*"/>
                </Grid.ColumnDefinitions>
                
                <!--picking pre-made icons as profile picture box-->
                <Grid Panel.ZIndex="100" HorizontalAlignment="Center" VerticalAlignment="Center" Width="600" Height="400" Grid.ColumnSpan="4" Grid.RowSpan="7">
                    <controls:ChooseIconBox x:Name="IconsBox">
                        <controls:ChooseIconBox.Effect>
                            <DropShadowEffect ShadowDepth="5" BlurRadius="7" Opacity="0.5" Color="Black"/>
                        </controls:ChooseIconBox.Effect>
                    </controls:ChooseIconBox>
                </Grid>
                
                <!--Profile picture-->
                <Grid Focusable="False" HorizontalAlignment="Stretch" Grid.Column="1" Grid.ColumnSpan="2" Grid.RowSpan="2" Margin="0" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <Ellipse Grid.Column="1" Height="130" Width="130">
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="{Binding MyImage, NotifyOnSourceUpdated=True}"/>
                        </Ellipse.Fill>
                    </Ellipse>
                    <StackPanel Grid.Column="2" Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="8">
                        <!--upload picture button-->
                        <controls:IconButton Focusable="False" Margin="1,0,0,2" ToolTipService.InitialShowDelay="0" VerticalAlignment="Bottom" Style="{DynamicResource TransparentIconButton1}" Icon="/Graphics/Icons/upload1.png" Height="22" Width="22" Padding="0" Click="UpdateProfilePicture_btnClick">
                            <controls:IconButton.Visibility>
                                <MultiBinding Converter="{StaticResource ConvertUserAndEngineerToVisibility}">
                                    <Binding Path="CurrentUser"/>
                                    <Binding Path="Engineer"/>
                                </MultiBinding>
                            </controls:IconButton.Visibility>
                            <controls:IconButton.ToolTip>
                                <ToolTip Background="Gray" StaysOpen="True">
                                    <ToolTip.Template>
                                        <ControlTemplate TargetType="ToolTip">
                                            <Border IsHitTestVisible="True" BorderThickness="1" BorderBrush="Black" Background="DimGray" CornerRadius="7" Height="auto" Width="auto">
                                                <Grid>
                                                    <TextBlock Margin="10" Foreground="White" FontSize="18" FontWeight="Bold" Text="Upload Picture"/>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </ToolTip.Template>
                                </ToolTip>
                            </controls:IconButton.ToolTip>
                        </controls:IconButton>
                        <!--upload pre made icon as picture-->
                        <controls:IconButton Focusable="False" ToolTipService.InitialShowDelay="0" VerticalAlignment="Bottom" Style="{DynamicResource TransparentIconButton1}" Icon="/Graphics/Icons/chooseIcon.png" Height="22" Width="22" Padding="0" Click="ChoosePreMadeIcon_btnClick">
                            <controls:IconButton.Visibility>
                                <MultiBinding Converter="{StaticResource ConvertUserAndEngineerToVisibility}">
                                    <Binding Path="CurrentUser"/>
                                    <Binding Path="Engineer"/>
                                </MultiBinding>
                            </controls:IconButton.Visibility>
                            <controls:IconButton.ToolTip>
                                <ToolTip Background="Gray" StaysOpen="True">
                                    <ToolTip.Template>
                                        <ControlTemplate TargetType="ToolTip">
                                            <Border IsHitTestVisible="True" BorderThickness="1" BorderBrush="Black" Background="DimGray" CornerRadius="7" Height="auto" Width="auto">
                                                <Grid>
                                                    <TextBlock Margin="10" Foreground="White" FontSize="18" FontWeight="Bold" Text="Choose Pre-Made"/>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </ToolTip.Template>
                                </ToolTip>
                            </controls:IconButton.ToolTip>
                        </controls:IconButton>
                    </StackPanel>
                </Grid>
                <!--Name-->
                <StackPanel VerticalAlignment="Center" Margin="15,0" Grid.Column="1" Grid.Row="2">
                    <Label VerticalContentAlignment="Bottom" Content="Name:"/>
                    <controls:CustomTextBox x:Name="NameTextBox" Style="{StaticResource TextBoxStyle1}" Background="White"
                        Text="{Binding Engineer.Name, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                        IsEnabled="{Binding CurrentUser.UserType, Converter={StaticResource ConvertUserTypeToIsEnabled}}">
                    </controls:CustomTextBox>
                </StackPanel>
                <!--Id-->
                <StackPanel VerticalAlignment="Center" Margin="15,0" Grid.Column="2" Grid.Row="2">
                    <Label VerticalContentAlignment="Bottom" Content="Id:"/>
                    <controls:CustomTextBox Style="{StaticResource TextBoxStyle1}" Background="White" MaxLength="9"
                        IsEnabled="{Binding Engineer.Id, Mode=OneWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, Converter={StaticResource convertEngIdToIsEnabled}}"                         
                        Text="{Binding Engineer.Id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" PreviewTextInput="EnteredKey_IdFieldChanged" >
                    </controls:CustomTextBox>
                </StackPanel>
                <!--Email-->
                <StackPanel VerticalAlignment="Center" Margin="15,0" Grid.Column="1" Grid.Row="3">
                    <Label VerticalContentAlignment="Bottom" Content="Email:"/>
                    <controls:CustomTextBox Style="{StaticResource TextBoxStyle1}" Background="White"
                        IsEnabled="{Binding CurrentUser.UserType, Converter={StaticResource ConvertUserTypeToIsEnabled}}"
                        Text="{Binding Engineer.Email, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}">
                    </controls:CustomTextBox>
                </StackPanel>
                <!--phone number-->
                <StackPanel VerticalAlignment="Center" Margin="15,0" Grid.Column="2" Grid.Row="3">
                    <Label VerticalContentAlignment="Bottom" Content="Phone number:"/>
                    <controls:CustomTextBox MaxLength="10" Style="{StaticResource TextBoxStyle1}" Background="White"
                        IsEnabled="{Binding CurrentUser.UserType, Converter={StaticResource ConvertUserTypeToIsEnabled}}"                        
                        Text="{Binding Engineer.Phone, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" PreviewTextInput="EnteredKey_IdFieldChanged">
                    </controls:CustomTextBox>
                </StackPanel>
                <!--Cost-->
                <StackPanel VerticalAlignment="Center" Margin="15,0" Grid.Column="1" Grid.Row="4">
                    <Label VerticalContentAlignment="Bottom" Content="Cost Per Hour:"/>
                    <controls:CustomTextBox Style="{StaticResource TextBoxStyle1}" Background="White" PreviewTextInput="EnteredKey_IdFieldChanged"
                        IsEnabled="{Binding CurrentUser.UserType, Converter={StaticResource ConvertUserTypeToIsEnabled}}"                        
                        Text="{Binding Engineer.Cost, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=true, ValidatesOnExceptions=true}">
                    </controls:CustomTextBox>
                </StackPanel>
                <!--Level-->
                <StackPanel VerticalAlignment="Center" Margin="15,0" Grid.Column="2" Grid.Row="4">
                    <Label VerticalContentAlignment="Bottom" Content="Level:"/>
                    <ComboBox 
                        Margin="0,0,0,0"                        
                        Background="{DynamicResource TextBoxColor1}"
                        Foreground="Black"
                        VerticalAlignment="Center"
                        Style="{StaticResource DefaultComboBoxStyle}"
                        SelectionChanged="LevelChanged_SelectionChanged"
                        SelectedValue="{Binding Engineer.Level, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                        ItemsSource="{Binding Source={StaticResource EngineerExperienceEnumCollection}}" 
                        IsEnabled="{Binding CurrentUser.UserType, Converter={StaticResource ConvertUserTypeToIsEnabled}}">
                    </ComboBox>
                </StackPanel>
                <!--Task-->
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="15,0" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="5">
                    <Label VerticalContentAlignment="Bottom" Content="Assign Task:"/>
                    <CheckBox Name="AssignTaskCheckBox" Grid.Row="6" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,0,0" 
                         IsChecked="{Binding Engineer.Task, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, Converter={StaticResource ConvertNullTaskInEngineerToBool}}"/>
                    <StackPanel Orientation="Horizontal">
                        <!--<controls:IconButton Style="{StaticResource IconButton1}" Icon="/Graphics/Icons/reset1.png" Height="30" Width="30" Background="Gray" Padding=" 5" Click="ResetAssignedTask_btnClick"/>-->
                        <controls:CustomTextBox Style="{StaticResource TextBoxStyle1}" Background="White"
                            Width="280" x:Name="textBox" IsReadOnly="True"                         
                            Text="{Binding Engineer.Task.Alias, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, NotifyOnValidationError=true, ValidatesOnExceptions=true}"                            
                            IsEnabled="{Binding ElementName=AssignTaskCheckBox, Path=IsChecked}">
                        </controls:CustomTextBox>
                        <controls:IconToggleButton x:Name="TaskPopupOpener" Style="{StaticResource ToggleIconButton1}" 
                                                   Icon="/Graphics/Icons/add1.png" Height="30" Width="30" Background="Gray"
                                                   IsEnabled="{Binding CurrentUser.UserType, Converter={StaticResource ConvertUserTypeToIsEnabled}}">
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleIconButton1}">
                                <Style.Triggers>
                                    <MultiDataTrigger >
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=AssignTaskCheckBox, Path=IsChecked}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=AssignTaskCheckBox, Path=IsChecked}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:IconToggleButton>
                        <Popup AllowsTransparency="True" StaysOpen="False" Placement="Top" PopupAnimation="Slide" IsOpen="{Binding ElementName=TaskPopupOpener, Path=IsChecked}">
                            <Border CornerRadius="10" Height="300" Width="440" Background="Gray">
                                <Border.Resources>
                                    <!--default template for task in list-->
                                    <DataTemplate x:Key="DefaultTaskInListTemplate" DataType="bl:TaskInList" >
                                        <Border CornerRadius="10" Background="#FF848484" Height="40" HorizontalAlignment="Stretch">
                                            <Grid HorizontalAlignment="Stretch">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="70"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="auto"/>
                                                </Grid.ColumnDefinitions>
                                                <!--icon for task status-->
                                                <Image HorizontalAlignment="Center" Margin="10" Grid.Column="0">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Setter Property="Source" Value="/Graphics/Icons/task1.png" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Status, Converter={StaticResource ConvertStatusToNumber}}" Value="1">
                                                                    <Setter Property="Source" Value="/Graphics/Icons/unscheduled1.png" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Status, Converter={StaticResource ConvertStatusToNumber}}" Value="2">
                                                                    <Setter Property="Source" Value="/Graphics/Icons/scheduled2.png" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Status, Converter={StaticResource ConvertStatusToNumber}}" Value="3">
                                                                    <Setter Property="Source" Value="/Graphics/Icons/in progress1.png" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Status, Converter={StaticResource ConvertStatusToNumber}}" Value="5">
                                                                    <Setter Property="Source" Value="/Graphics/Icons/done1.png" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Status, Converter={StaticResource ConvertStatusToNumber}}" Value="4">
                                                                    <Setter Property="Source" Value="/Graphics/Icons/in jeopardy1.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                                <Grid Grid.Column="1" Background="#FF929292">
                                                    <TextBlock  Text="{Binding Id}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="15" FontWeight="Bold"/>
                                                </Grid>
                                                <TextBlock Grid.Column="2" Text="{Binding Alias}"  VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="15" FontWeight="Bold"/>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </Border.Resources>
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="15" BlurRadius="5" Opacity="0.5" Color="Black"/>
                                </Border.Effect>
                                <ListView x:Name="AvailableTasksDisplay" HorizontalContentAlignment="Stretch" ItemsSource="{Binding AvailableTasks}"
                                          ItemTemplate="{StaticResource DefaultTaskInListTemplate}"
                                          SelectionChanged="TaskSelected_ListView">
                                    <!--SelectedValue="{Binding Engineer.Task, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"-->
                                </ListView>
                            </Border>
                        </Popup>
                    </StackPanel>
                </StackPanel>
                <!--Back button-->
                <controls:IconButton 
                    Grid.Row="0" Background="White" 
                    Height="30"
                    Width="30"
                    IconHeight="70"
                    Style="{DynamicResource IconButton1}"  
                    Content="Back" Click="GoBack_BtnClick" 
                    Icon="/Graphics/Icons/backArrow1.png"/>
                <!--Button for adding\updating-->
                <Button 
                    Style="{DynamicResource ButtonStyle1}"
                    Content="Save"
                    Background="#FF414243" Foreground="White" FontSize="14" VerticalContentAlignment="Center"
                    Grid.Column="3" Grid.Row="0" Padding="8" Width="75" Height="40"  Click="AddOrUpdateEngineer_btnClick">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource ConvertUserAndEngineerToIsEnabled}">
                            <Binding Path="CurrentUser"/>
                            <Binding Path="Engineer"/>
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
                <!--Button for reseting changes-->
                <Button 
                    Style="{DynamicResource ButtonStyle1}"
                    Content="Reset Changes" Background="#FF414243" Foreground="White" FontSize="14"
                    VerticalContentAlignment="Center" Width="180" Height="40" HorizontalContentAlignment="Center" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="7"
                    Click="ResetChanges_btnClick"/>
            </Grid>
        </Border>
            
    </Grid>
</Page>
