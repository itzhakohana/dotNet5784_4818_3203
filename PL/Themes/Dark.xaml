<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"                    
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
    xmlns:d="clr-namespace:DataTemplates"
    xmlns:bl="clr-namespace:BO;assembly=BL"
    xmlns:controls="clr-namespace:PL.CustomControls">


    <!--colors-->
    <LinearGradientBrush x:Key="defaultMainBackround" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#FF313131"/>
    </LinearGradientBrush>
    
    <SolidColorBrush x:Key="Backround1" Color="#FF585858">
    </SolidColorBrush>

    <SolidColorBrush x:Key="Backround2" Color="#FF464646">
    </SolidColorBrush>

    <SolidColorBrush x:Key="Backround3" Color="#FF2D2D2D">
    </SolidColorBrush>

    <SolidColorBrush x:Key="Backround4" Color="#191a26">
    </SolidColorBrush>

    <SolidColorBrush x:Key="Backround5" Color="#FF454A81">
    </SolidColorBrush>

    <SolidColorBrush x:Key="Backround6" Color="#FF676CA2">
    </SolidColorBrush>

    <SolidColorBrush x:Key="Backround7" Color="#FF37394D">
    </SolidColorBrush>

    <SolidColorBrush x:Key="IsMouseOverColor1" Color="#FF666B9E">
    </SolidColorBrush>

    <SolidColorBrush x:Key="fontColor1" Color="White">
    </SolidColorBrush>

    <SolidColorBrush x:Key="BorderColorOnMouseOver1" Color="DarkBlue">
    </SolidColorBrush>

    <SolidColorBrush x:Key="EngineerListBackround1" Color="#859fff">
    </SolidColorBrush>

    <SolidColorBrush x:Key="EngineerListBackround2" Color="#bdbdbd">
    </SolidColorBrush>

    <SolidColorBrush x:Key="EngineerListBackround3" Color="#FFB0B0B0">
    </SolidColorBrush>

    <SolidColorBrush x:Key="TextBoxColor1" Color="#cfcfcf">
    </SolidColorBrush>

    <SolidColorBrush x:Key="TextBoxBorderColorOnFocus1" Color="Blue">
    </SolidColorBrush>

    <!--default lable style-->
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource fontColor1}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Bahnschrift SemiLight"/>
    </Style>

    

    <!--style for main menu buttons-->
    <Style x:Key="mainButtons" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Margin" Value="2,3"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Trebuchet MS"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="BorderThickness" Value="2,2"/>
        <Setter Property="BorderBrush" Value="#FF94A4EA"/>
    </Style>

    <!--style for text button with rounded borders-->
    <Style x:Key="ButtonStyle1" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Backround1}"/>
        <Setter Property="Foreground" Value="{StaticResource fontColor1}"/>
        <Setter Property="FontSize" Value="40"/>
        <Setter Property="Margin" Value=" 10"/>
        <Setter Property="Padding" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                        x:Name="border"
                        BorderBrush="Black"
                        CornerRadius="10"
                        Background="{TemplateBinding Background}"
                        Height="{TemplateBinding Height}"
                        Width="{TemplateBinding Width}">
                        <TextBlock 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            FontSize="{TemplateBinding FontSize}"
                            FontFamily="{TemplateBinding FontFamily}"
                            Foreground="{TemplateBinding Foreground}"
                            Background="Transparent"
                            Text="{TemplateBinding Content}">
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            
                            <Setter Property="Opacity" Value="0.5" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.75"/>
                            <Setter Property="BorderThickness" Value="1" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--style for icon button -->
    <Style x:Key="IconButton1" TargetType="{x:Type controls:IconButton}">
        <Setter Property="Background" Value="{StaticResource Backround1}"/>
        <Setter Property="Foreground" Value="{StaticResource fontColor1}"/>
        <Setter Property="FontFamily" Value="Bahnschrift SemiLight"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="MaxHeight" Value="200"/>
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="MaxWidth" Value="200"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:IconButton}">
                    <!--<Border x:Name="border" 
                        Background="Transparent" 
                        BorderBrush="Black" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="8">
                        <Grid>
                            <Image Margin="3" Source="{TemplateBinding Icon}"/>
                        </Grid>
                    </Border>-->
                    
                    <Border x:Name="border" CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <Image Height="{TemplateBinding IconHeight}" Width="{TemplateBinding IconWidth}" Source="{TemplateBinding Icon}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="white"/>
                            <Setter Property="Opacity" TargetName="border" Value="0.7"/>
                            <!--<Setter Property="BorderThickness" TargetName="border" Value="0"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--style for toggle Button icon button -->
    <Style x:Key="ToggleIconButton1" TargetType="{x:Type controls:IconToggleButton}">
        <Setter Property="Background" Value="{StaticResource Backround1}"/>
        <Setter Property="Foreground" Value="{StaticResource fontColor1}"/>
        <Setter Property="FontFamily" Value="Bahnschrift SemiLight"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="MaxHeight" Value="200"/>
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="MaxWidth" Value="200"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:IconToggleButton}">
                    <!--<Border x:Name="border" 
                    Background="Transparent" 
                    BorderBrush="Black" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    CornerRadius="8">
                    <Grid>
                        <Image Margin="3" Source="{TemplateBinding Icon}"/>
                    </Grid>
                </Border>-->

                    <Border x:Name="border" CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <Image Source="{TemplateBinding Icon}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="white"/>
                            <Setter Property="Opacity" TargetName="border" Value="0.7"/>
                            <!--<Setter Property="BorderThickness" TargetName="border" Value="0"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="white"/>
                            <Setter Property="Opacity" TargetName="border" Value="0.7"/>
                            <!--<Setter Property="BorderThickness" TargetName="border" Value="0"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--style for combo box-->
    <Style x:Key="DefaultComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{StaticResource Backround2}"/>
        <Setter Property="Foreground" Value="{StaticResource fontColor1}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="MinWidth" Value="90"/>
        <Setter Property="MaxWidth" Value="250"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border 
                        Name="MainBorder"
                        Background="{TemplateBinding Background}"
                        BorderThickness="1" 
                        BorderBrush="Black" 
                        CornerRadius="6">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <ToggleButton 
                                Name="ToggleButton"                                     
                                Grid.Column="1"                                
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border Background="{StaticResource Backround1}"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="0,6,6,0">
                                            <Image Name="ExpanderIcon" Margin="5" Source="/Graphics/Icons/expander arrow.png"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="ExpanderIcon" Property="RenderTransform">
                                                    <Setter.Value>
                                                        <ScaleTransform  ScaleX="1" ScaleY="-1" CenterY="10"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter 
                                x:Name="ContentSite"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="3,0,0,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center">
                            </ContentPresenter>
                            <Popup x:Name="Popup"
                                   Placement="Bottom"                                   
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="False"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid 
                                      x:Name="DropDown"
                                      SnapsToDevicePixels="True"  
                                      Background="{StaticResource Backround1}"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <!--<Border 
                                            x:Name="DropDownBorder"
                                            Background="Transparent"
                                            BorderThickness="1"
                                            BorderBrush="Black"/>-->
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="gray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        
                        <!-- Trigger to extend the Popup when the ToggleButton is checked -->
                        <!--<Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="{Binding ElementName=ToggleButton, Path=ActualHeight}" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style> 
        
</ResourceDictionary>