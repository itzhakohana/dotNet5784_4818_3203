<Page x:Class="PL.TaskPages.TaskPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:bl="clr-namespace:BO;assembly=BL"  
      xmlns:controls="clr-namespace:PL.CustomControls"
      xmlns:local="clr-namespace:PL.TaskPages"
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="1050"
      Title="TaskPage"      
      DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}">

    <Page.Resources>
        <Style x:Key="DateDisplayStyle" TargetType="TextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid Background="Transparent" MinHeight="25" Margin="{TemplateBinding Margin}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" Grid.Row="0" Margin="4" Source="/Graphics/Icons/calendar1.png">
                                <Image.Effect>
                                    <DropShadowEffect ShadowDepth="3" BlurRadius="5" Opacity="0.3" Color="Black"/>
                                </Image.Effect>
                            </Image>
                            <Separator Grid.ColumnSpan="2" Background="Black" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom" HorizontalAlignment="Stretch"/>
                            <TextBlock Margin="4,0,0,0" Focusable="True" Grid.Column="1" Text="{TemplateBinding Text}" Foreground="White" FontSize="16" VerticalAlignment="Center" FontWeight="DemiBold"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid Background="Transparent" ShowGridLines="False">
        <Grid.Resources>
            <DataTemplate x:Key="TaskInListTemplate" DataType="bl:TaskInList" >
                <Border CornerRadius="3" Background="LightGray" HorizontalAlignment="Stretch">
                    <Grid  HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding Id}" VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="1" Text="{Binding Alias}" VerticalAlignment="Center" Width="auto" HorizontalAlignment="Stretch"/>
                        <Button Background="Gray" Height="20" Width="40" Content="Add" FontSize="11" VerticalContentAlignment="Center" Grid.Column="2" Click="AddDependency_BtnClick">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.4"/>
                                            <Setter Property="Background" Value="DarkGray"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </Border>
            </DataTemplate>
            <ControlTemplate x:Key="TextBoxControlTemplate" TargetType="{x:Type TextBox}">

                <Border VerticalAlignment="Center" Name="border" Background="{DynamicResource TextBoxColor1}" MinHeight="35" MaxHeight="40" CornerRadius="4" BorderThickness="1" BorderBrush="Black">

                    <TextBox 
                         Name="myTextBox" 
                         IsEnabled="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                         Background="Transparent"     
                         BorderThickness="0"
                         FontSize="17"  
                         MaxLength="{TemplateBinding MaxLength}"
                         Height="{TemplateBinding Height}"
                         MinWidth="70"
                         VerticalAlignment="Center"                                             
                         HorizontalAlignment="Center"    
                         HorizontalContentAlignment="Center" 
                         FontFamily="Global Sans Serif"
                         Text ="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">

                    </TextBox>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBoxBorderColorOnFocus1}"/>
                        <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True" SourceName="myTextBox">
                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TextBoxBorderColorOnFocus1}"/>
                        <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsFocused" Value="False" SourceName="myTextBox"/>
                            <Condition Property="Text" Value="{x:Null}" SourceName="myTextBox"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Text" TargetName="myTextBox" Value="Name"/>
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.3*"/>
            <ColumnDefinition Width="1.5*"/>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="0.3*"/>
        </Grid.ColumnDefinitions>

        <!--handle dependencies popup window-->
        <Border  Panel.ZIndex="10" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.RowSpan="3" Grid.ColumnSpan="3">
            <StackPanel  Orientation="Horizontal" >
                <!--add Dependencies popup window-->
                <Border x:Name="AddDependenciesBorder" Background="{DynamicResource Backround6}" CornerRadius="10" BorderBrush="Black" BorderThickness="2" Visibility="Collapsed" Width="400" Height="400">
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="10" BlurRadius="5" Opacity="0.5" Color="Black"/>
                    </Border.Effect>
                    <!--add dependencies popup-->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.ColumnSpan="2" VerticalAlignment="Top" HorizontalContentAlignment="Center" Content="Add Dependent Tasks" Foreground="White" Margin="5"/>
                        <!--go back button-->
                        <controls:IconButton 
                            Grid.Row="0" Height="15" Width="10" IconHeight="70" Margin="10" Background="White"
                            Style="{DynamicResource IconButton1}" VerticalAlignment="Top" HorizontalAlignment="Left"
                            Content="Back" Icon="/Graphics/Icons/backArrow1.png" Click="CloseDependenciesWindow_BtnClick">
                        </controls:IconButton>
                        <!--list view for adding dependencies-->
                        <ListView  Margin="5,35,5,5" Grid.RowSpan="2" Grid.ColumnSpan="2" 
                            ItemsSource="{Binding AvailableDependencies, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                            ItemTemplate="{StaticResource TaskInListTemplate}"
                            SelectionMode="Extended" HorizontalContentAlignment="Stretch">

                        </ListView>
                    </Grid >
                </Border>
                <!--view dependencies popup window-->
                <Border x:Name="CurrentDependenciesBorder"  Background="{DynamicResource Backround6}" CornerRadius="10" BorderBrush="Black" BorderThickness="2" Visibility="Collapsed" Width="400" Height="400">
                    <Border.Resources>
                        <DataTemplate x:Key="TaskInListViewTemplate" DataType="bl:TaskInList" >
                            <Border CornerRadius="3" Background="LightGray" HorizontalAlignment="Stretch">
                                <Grid  HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="70"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding Id}" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Column="1" Text="{Binding Alias}" VerticalAlignment="Center" Width="auto" HorizontalAlignment="Stretch"/>
                                    <Button Background="Gray" Height="20" Width="50" Content="Remove" FontSize="11" VerticalContentAlignment="Center" Grid.Column="2" Click="RemoveDependency_BtnClick">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Opacity" Value="0.4"/>
                                                        <Setter Property="Background" Value="DarkGray"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </Border.Resources>
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="10" BlurRadius="5" Opacity="0.5" Color="Black"/>
                    </Border.Effect>
                    <!--actual dependencies popup-->
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.ColumnSpan="2" VerticalAlignment="Top" HorizontalContentAlignment="Center" Content="Current Dependent Tasks" Foreground="White" Margin="5"/>
                        <ListView  Margin="5,35,5,5" Grid.RowSpan="2" Grid.ColumnSpan="2" 
                            ItemsSource="{Binding CurrentTaskDependencies, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                            ItemTemplate="{StaticResource TaskInListViewTemplate}"
                            SelectionMode="Extended" HorizontalContentAlignment="Stretch">
                        </ListView>
                    </Grid>
                </Border>
            </StackPanel>
        </Border>

        <!--dates display on the left-->
        <Grid Grid.Column="1" Grid.ColumnSpan="1" Grid.Row="0" Grid.RowSpan="3" Panel.ZIndex="1" ShowGridLines="False">
            <Border CornerRadius="14,0,0,14" Grid.Column="0" Grid.ColumnSpan="2" Background="{DynamicResource Backround5}">
                <Grid ShowGridLines="False">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="135"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="70"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Ellipse Grid.Column="0" Grid.Row="0" Margin="10" Height="110" Width="110" Fill="DarkCyan">
                        <Ellipse.Effect>
                            <DropShadowEffect ShadowDepth="6" BlurRadius="5" Opacity="0.5" Color="Black"/>
                        </Ellipse.Effect>
                    </Ellipse>
                    <Image Grid.Column="0" Grid.Row="0" Margin="35" Source="/Graphics/Icons/laptop1.png">
                        <Image.Effect>
                            <DropShadowEffect ShadowDepth="3" BlurRadius="5" Opacity="0.3" Color="Black"/>
                        </Image.Effect>
                    </Image>
                    <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Hidden" Grid.Row="1" Grid.RowSpan="2" Margin="10">
                        <StackPanel Orientation="Vertical" >
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock Text="{Binding Task.Id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, StringFormat={}Task: #{0}}" FontSize="18" Margin="0" VerticalAlignment="Center"  Foreground="White"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Image HorizontalAlignment="Center" Margin="10" Height="30" Width="30" Grid.Column="0">
                                    <Image.Effect>
                                        <DropShadowEffect ShadowDepth="2" BlurRadius="5" Opacity="0.3" Color="Black"/>
                                    </Image.Effect>
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="/Graphics/Icons/level1.png" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Task.Status, Converter={StaticResource ConvertStatusToNumber}}" Value="1">
                                                    <Setter Property="Source" Value="/Graphics/Icons/unscheduled1.png" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Task.Status, Converter={StaticResource ConvertStatusToNumber}}" Value="2">
                                                    <Setter Property="Source" Value="/Graphics/Icons/scheduled2.png" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Task.Status, Converter={StaticResource ConvertStatusToNumber}}" Value="3">
                                                    <Setter Property="Source" Value="/Graphics/Icons/in progress1.png" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Task.Status, Converter={StaticResource ConvertStatusToNumber}}" Value="5">
                                                    <Setter Property="Source" Value="/Graphics/Icons/done1.png" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Task.Status, Converter={StaticResource ConvertStatusToNumber}}" Value="4">
                                                    <Setter Property="Source" Value="/Graphics/Icons/in jeopardy1.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <Label Content="{Binding Task.Status, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" FontSize="20" FontWeight="Bold"/>
                            </StackPanel>
                            <Separator Grid.ColumnSpan="2" Background="White" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom" HorizontalAlignment="Stretch"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Visibility="{Binding Task.Milestone, Converter={StaticResource ConvertNullToVisibility}}">
                                <Image HorizontalAlignment="Center" Margin="5" Height="20" Width="20" Source="/Graphics/Icons/milestone1.png"/>
                                <TextBlock Text="{Binding Task.Milestone.Alias, Mode=TwoWay, NotifyOnValidationError=true, StringFormat={}Milestone: {0}}" FontSize="18" Margin="0" VerticalAlignment="Center"  Foreground="White"/>
                                <controls:IconButton Grid.Column="3" Margin="15,2,10,0" Height="20" Width="20" Style="{StaticResource TransparentIconButton1}" IsEnabled="{Binding Task.Milestone, NotifyOnSourceUpdated=True, Converter={StaticResource ConvertNullToBool}}"
                                    Background="Transparent" Icon="/Graphics/Icons/info1.png" Click="ViewMilestone_btnClick"/>
                            </StackPanel>
                            <Separator Visibility="{Binding Task.Milestone, Converter={StaticResource ConvertNullToVisibility}}"
                                   Grid.ColumnSpan="2" Background="White" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom" HorizontalAlignment="Stretch"/>

                            <StackPanel VerticalAlignment="Top">
                                <Label Content="Creation Date:" FontSize="11"/>
                                <TextBox Grid.Row="1" Style="{StaticResource DateDisplayStyle}" Text="{Binding Task.CreatedAtDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, Converter={StaticResource ConvertNullDateTimeToString}, StringFormat={}{0:dd/MM/yy  HH:mm:ss}}"/>
                                <Label Content="Start Date:" FontSize="11"/>
                                <TextBox Grid.Row="1" Style="{StaticResource DateDisplayStyle}" Text="{Binding Task.StartDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, Converter={StaticResource ConvertNullDateTimeToString},StringFormat={}{0:dd/MM/yy  HH:mm:ss}}"/>
                                <Label Content="Scheduled:" FontSize="11"/>
                                <TextBox Grid.Row="1" Style="{StaticResource DateDisplayStyle}" Text="{Binding Task.ScheduledDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, Converter={StaticResource ConvertNullDateTimeToString},StringFormat={}{0:dd/MM/yy  HH:mm:ss}}"/>
                                <Label Content="Expected to complete:" FontSize="11"/>
                                <TextBox Grid.Row="1" Style="{StaticResource DateDisplayStyle}" Text="{Binding Task.ForecastDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, Converter={StaticResource ConvertNullDateTimeToString},StringFormat={}{0:dd/MM/yy  HH:mm:ss}}"/>
                                <Label Content="Deadline:" FontSize="11"/>
                                <TextBox Grid.Row="1" Style="{StaticResource DateDisplayStyle}" Text="{Binding Task.DeadlineDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, Converter={StaticResource ConvertNullDateTimeToString},StringFormat={}{0:dd/MM/yy  HH:mm:ss}}"/>
                                <Label Content="Completion Date:" FontSize="11"/>
                                <TextBox Grid.Row="1" Style="{StaticResource DateDisplayStyle}" Text="{Binding Task.CompleteDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, Converter={StaticResource ConvertNullDateTimeToString},StringFormat={}{0:dd/MM/yy  HH:mm:ss}}"/>
                            </StackPanel>
                        </StackPanel>
                    </ScrollViewer>

                </Grid>
            </Border>
        </Grid>

        <!--main display-->
        <Border Grid.RowSpan="3" Grid.Column="2" Background="{DynamicResource Backround4}" CornerRadius="0,15,15,0" BorderBrush="Black">
            <Grid ShowGridLines="False">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.1*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="65"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.1*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.1*"/>
                </Grid.ColumnDefinitions>

                <!--alias-->
                <StackPanel VerticalAlignment="Center" Margin="15,0" Grid.Column="1" Grid.ColumnSpan="2" Width="300" Grid.Row="1">
                    <Label VerticalContentAlignment="Bottom" Content="Name/Alias:"/>
                    <controls:CustomTextBox Style="{StaticResource TextBoxStyle1}" Background="White"
                         Text="{Binding Task.Alias, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                         IsEnabled="{Binding CurrentUser.UserType, Converter={StaticResource ConvertUserTypeToIsEnabled}}">
                    </controls:CustomTextBox>
                </StackPanel>

                <!--required effort time-->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="1"  Grid.Row="2">
                    <!--required days-->
                    <StackPanel VerticalAlignment="Center" Margin="15,0" >
                        <Label VerticalContentAlignment="Bottom" Content="Days Required:"/>
                        <controls:CustomTextBox Style="{StaticResource TextBoxStyle1}" Background="White"
                                HorizontalAlignment="Left"
                                Width="130"                                                       
                                Text="{Binding Task.RequiredEffortTime, Mode=TwoWay,  ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ConvertTimeSpanToDaysOnlyString}}" PreviewTextInput="EnteredKey_RequiredDaysFieldChanged">
                            <TextBox.IsEnabled>
                                <MultiBinding Converter="{StaticResource ConvertUserAndProjectStateToBool}">
                                    <Binding Path="CurrentUser.UserType"/>
                                    <Binding Path="ProjectHasStarted"/>
                                </MultiBinding>
                            </TextBox.IsEnabled>
                        </controls:CustomTextBox>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="2">

                    <!--assign engineer-->
                    <StackPanel Orientation="Vertical"  VerticalAlignment="Center" HorizontalAlignment="Center" Margin="15,0" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <CheckBox Name="AssignEngineerCheckBox" Grid.Row="6" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,0,0" 
                                      IsChecked="{Binding Task.Engineer, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, Converter={StaticResource ConvertNullEngineerInTaskToBool}}"
                                      IsEnabled="{Binding CurrentUser.UserType, Converter={StaticResource ConvertUserTypeToIsEnabled}}"/>
                            <Label VerticalContentAlignment="Bottom" Content="Assign Engineer:"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <controls:CustomTextBox Style="{StaticResource TextBoxStyle1}" Background="White" 
                                x:Name="textBox" Width="200" IsReadOnly="True"
                                Text="{Binding Task.Engineer.Name, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                                IsEnabled="{Binding ElementName= AssignEngineerCheckBox, Path=IsChecked}">
                            </controls:CustomTextBox>
                            <controls:IconToggleButton x:Name="TaskPopupOpener" Style="{StaticResource ToggleIconButton1}" 
                                                       Icon="/Graphics/Icons/add1.png" Height="30" Width="30" Background="Gray"
                                                       IsEnabled="{Binding CurrentUser.UserType, Converter={StaticResource ConvertUserTypeToIsEnabled}}">
                                <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleIconButton1}">
                                    <Style.Triggers>
                                        <MultiDataTrigger >
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=AssignTaskCheckBox, Path=IsChecked}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </MultiDataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=AssignTaskCheckBox, Path=IsChecked}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </controls:IconToggleButton>
                        </StackPanel>
                        <Popup AllowsTransparency="True" StaysOpen="False" Placement="Top" PopupAnimation="Slide" IsOpen="{Binding ElementName=TaskPopupOpener, Path=IsChecked}">
                            <Border CornerRadius="10" Height="300" Width="450" Background="Gray">
                                <Border.Resources>
                                    <!--default template for engineer in task-->
                                    <DataTemplate x:Key="DefaultEngineerInTaskTemplate" DataType="bl:EngineerInTask" >
                                        <Border CornerRadius="10" Background="#FF848484" Height="40" HorizontalAlignment="Stretch">
                                            <Grid HorizontalAlignment="Stretch">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="60"/>
                                                    <ColumnDefinition Width="150"/>
                                                    <ColumnDefinition Width="200"/>
                                                    <ColumnDefinition Width="auto"/>
                                                </Grid.ColumnDefinitions>
                                                <!--icon for engineer status-->
                                                <Image HorizontalAlignment="Center" Grid.Column="0" Height="30" Width="30" Source="/Graphics/Icons/user2.png">
                                                </Image>
                                                <Grid Grid.Column="1" Background="#FF929292">
                                                    <TextBlock  Text="{Binding Id}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="15" FontWeight="Bold"/>
                                                </Grid>
                                                <TextBlock Grid.Column="2" Text="{Binding Name}"  VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="15" FontWeight="Bold"/>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </Border.Resources>
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="15" BlurRadius="5" Opacity="0.5" Color="Black"/>
                                </Border.Effect>
                                <ListView x:Name="AvailableTasksDisplay" HorizontalContentAlignment="Stretch"
                                    ItemTemplate="{StaticResource DefaultEngineerInTaskTemplate}"
                                    SelectedValue="{Binding Task.Engineer, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                                    ItemsSource="{Binding AvailableEngineers}"
                                    SelectionChanged="EngineerSelected_ListView">
                                    <!--SelectedValue="{Binding Engineer.Task, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"-->
                                </ListView>
                            </Border>
                        </Popup>
                    </StackPanel>
                </StackPanel>

                <!--Remarks-->
                <StackPanel VerticalAlignment="Center" Margin="15,0" Grid.Column="2" Grid.Row="3">
                    <Label VerticalContentAlignment="Bottom" Content="Remarks:"/>
                    <controls:CustomTextBox Style="{StaticResource TextBoxStyle1}" Background="White"                                 
                          IsEnabled="{Binding CurrentUser.UserType, Converter={StaticResource ConvertUserTypeToIsEnabled}}"
                          Text="{Binding Task.Remarks, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}">
                    </controls:CustomTextBox>
                </StackPanel>

                <!--task complexity-->
                <StackPanel VerticalAlignment="Center" Margin="15,0" Grid.Row="3" Grid.Column="1">
                    <Label VerticalContentAlignment="Bottom" Content="Level:"/>
                    <ComboBox 
                            Width="250"
                            Margin="0,0,0,0"
                            Background="{DynamicResource TextBoxColor1}"
                            Foreground="Black"
                            VerticalAlignment="Center" HorizontalAlignment="Left"
                            Style="{StaticResource DefaultComboBoxStyle}"
                            SelectedValue="{Binding Task.Complexity, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                            ItemsSource="{Binding Source={StaticResource EngineerExperienceEnumCollection}}" 
                            SelectionChanged="ComplexitySelectionCHanged_ComboBoxSelectionChanged">
                        <ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource ConvertUserAndProjectStateToBool}">
                                <Binding Path="CurrentUser.UserType"/>
                                <Binding Path="ProjectHasStarted"/>
                            </MultiBinding>
                        </ComboBox.IsEnabled>
                    </ComboBox>

                </StackPanel>

                <!--Deliverables-->
                <StackPanel VerticalAlignment="Center" Margin="15,0" Grid.Column="1" Grid.Row="4">
                    <Label VerticalContentAlignment="Bottom" Content="Deliverables:"/>
                    <controls:CustomTextBox Style="{StaticResource TextBoxStyle1}" Background="White" Height="130"  TextWrapping="Wrap"                                               
                          Text="{Binding Task.Deliverables, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                          IsEnabled="{Binding CurrentUser.UserType, Converter={StaticResource ConvertUserTypeToIsEnabled}}">
                    </controls:CustomTextBox>
                </StackPanel>

                <!--description-->
                <StackPanel Name="DescriptionPanel" VerticalAlignment="Center" Margin="15,0"  Grid.Column="2" Grid.Row="4">
                    <Label VerticalContentAlignment="Bottom" Content="Description:"/>
                    <controls:CustomTextBox Style="{StaticResource TextBoxStyle1}" Background="White" Height="130" TextWrapping="Wrap" x:Name="DesTextBox"
                          Text="{Binding Task.Description, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                          IsEnabled="{Binding CurrentUser.UserType, Converter={StaticResource ConvertUserTypeToIsEnabled}}">
                    </controls:CustomTextBox>
                </StackPanel>

                <!--Go Back button-->
                <controls:IconButton 
                     Grid.Row="0" Background="White" Margin="30" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.ColumnSpan="3" Grid.RowSpan="3"
                     Height="30" Width="30" IconHeight="70" Style="{DynamicResource IconButton1}" Content="Back" Click="GoBack_BtnClick" 
                     Icon="/Graphics/Icons/backArrow1.png"/>
                <!--Button for adding\updating-->
                <Button 
                     Style="{DynamicResource ButtonStyle1}" Margin="25" VerticalAlignment="Top" HorizontalAlignment="Right" Grid.ColumnSpan="2" Grid.RowSpan="3"         
                     IsEnabled="{Binding CurrentUser.UserType, Converter={StaticResource ConvertUserTypeToIsEnabled}}" 
                     Content="Save" FontSize="15" Background="#FF414243" Foreground="White" VerticalContentAlignment="Center"
                     Grid.Column="2" Grid.Row="0" Padding="8" Width="75" Height="40"  Click="AddOrUpdateTask_btnClick">
                </Button>

                <!--buttons for handling dependencies-->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="7">
                    <Border CornerRadius="6" Background="Transparent" Height="50" Width="200" >
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="4" BlurRadius="5" Opacity="0.5" Color="Black"/>
                        </Border.Effect>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                            <Button Style="{StaticResource ButtonStyle1}" Background="#FF414243" Foreground="White" Content="View Dependencies" FontSize="15" FontWeight="Bold" Width="170" Height="30" Click="ShowViewDependenciesWindow_BtnClick"/>
                        </StackPanel>
                    </Border>
                    <!--Button for reseting changes-->
                    <Button 
                         Style="{DynamicResource ButtonStyle1}"
                         Content="Reset Changes" Background="#FF414243" Foreground="White" FontSize="15" FontWeight="Bold" Margin="0"
                         VerticalContentAlignment="Center" Width="150" Height="30" HorizontalContentAlignment="Center"
                         Click="ResetChanges_btnClick">
                        <Button.Effect>
                            <DropShadowEffect ShadowDepth="4" BlurRadius="5" Opacity="0.5" Color="Black"/>
                        </Button.Effect>
                    </Button>
                </StackPanel>

            </Grid>
        </Border>

    </Grid>
</Page>
